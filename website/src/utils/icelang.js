// This file was generated by lezer-generator. You probably shouldn't edit it.
import { LRParser } from "@lezer/lr";
const spec_Identifier = {
  __proto__: null,
  set: 16,
  true: 28,
  false: 28,
  lambda: 32,
  to: 42,
  if: 46,
  else: 50,
  match: 54,
  function: 62,
  for: 66,
  in: 68,
  while: 72,
  loop: 76,
  return: 80,
  continue: 84,
  break: 88,
};
export const parser = LRParser.deserialize({
  version: 14,
  states:
    ",YQYQPOOOYQPO'#CaOOQO'#C`'#C`O_QPO'#C_OOQO'#DZ'#DZQYQPOOOdQPO,58{OiQPO,58yOnQPO'#CbOOQO-E7X-E7XOOQO1G.g1G.gOsQPO1G.eOxQPO'#CzO}QPO,58|O!SQPO7+$PO!XQPO'#C|O!^QPO,59fO!cQPO1G.hO!}QPO<<GkO!cQPO'#DPO#SQPO,59hO#XQPO1G/QOOQO'#Ci'#CiOOQO'#Cf'#CfO#^QPO'#CfO$eQPO'#CyOOQO'#Ce'#CeO$lQPO'#CkO$qQPO'#CrO$vQPO'#CvOOQO7+$S7+$SO${QPOAN=VOYQPO'#DROYQPO,59kOYQPO1G/SO%QQPO'#CnO%YQPO7+$lO%_QPO,59[OOQO'#D^'#D^O%gQPO,59eOOQO,59e,59eO#XQPO,59VO!cQPO,59^O!cQPO,59bO%nQPOG22qO!cQPO'#DTOOQO,59m,59mOOQO1G/V1G/VOOQO7+$n7+$nO%sQPO'#D[O%xQPO,59YOYQPO<<HWOOQO1G.v1G.vOOQO-E7[-E7[OOQO1G/P1G/PO&QQPO1G.qO&VQPO1G.xO&[QPO1G.|O&aQPOLD(]OOQO'#DV'#DVOOQO,59o,59oOOQO,59v,59vOOQO-E7Y-E7YOOQOAN=rAN=rOYQPO7+$]OYQPO7+$dO&fQPO7+$hO!cQPO!$'KwOOQO'#DX'#DXOOQO<<Gw<<GwO&kQPO<<HOO!cQPO<<HSOOQO!)9Ac!)9AcO!cQPO'#CtOOQOAN=jAN=jO&pQPO'#CxO&uQPOAN=nOOQO,59`,59`OYQPO,59dO!cQPO'#D]O&}QPOG23YOOQOG23YG23YOOQO1G/O1G/OOOQO,59w,59wOOQO-E7Z-E7ZOOQOLD(tLD(t",
  stateData:
    "'Y~O!TOSPOS~O!UPO~OWWO~O!VYO~Oo[O~OV]O~Oq_O~OV`O~O!WaO~OtcO~OVdO~OaeO~OVgOZhO[hO^fO`kOaiOglOkmO~OvpO~OrrO~OVsO~OeuOoYX!UYXVYXZYX[YX^YX`YXaYXcYXgYXkYXzYX!RYX!YYX!VYX!XYX~OcxO~P!cOayO~OazO~Oa{O~Ox}O~O!X!ROcbX~Oc!TO~OZ!UO[!UO~Oc!WO~P!cOz!]O~OV!_O~O!X!ROcba~Oc!bO~Oc!cO~Oc!dO~O|!fO~O!U!iO~Oi!kO~O!Y!pO~O!V!sO!X!qO~O!V!wO!X!qO~O[V~",
  goto: "%h!RPPP!S!^!d!|PP#P#nPP#{P#nPP$YP#nP#nP$`P#nP$c#n$iP$lPP$oP$rP$uP$xP${P%O%U%[%bSSOTQUPR!t!pXROPT!pWQOPT!pQ!OpQ!PqQ!QrQ!a!TQ!g!bR!h!cRVRQnaQqcSviwQ!YzQ!Z{Q!^}Q!j!eS!m!i!qR!o!kgjaciwz{}!e!i!k!qggaciwz{}!e!i!k!qQteR!XyR!l!hQ!n!iR!u!qRZVR^ZRb^RobR|oR![|R!e![QTORXTQ!SsR!`!SQ!r!nR!v!rQwiR!Vw",
  nodeNames:
    "âš  LineComment Program Statement BlockStatement Block VariableDeclaration Identifier set Expression Literal String Number Boolean BooleanLiteral Lambda lambda ( Params ) Range to IfExpression if ElseBranch else MatchExpression match MatchArm Application FunctionDeclaration function ForStatement for in WhileStatement while LoopStatement loop ReturnStatement return ContinueStatement continue BreakStatement break",
  maxTerm: 56,
  skippedNodes: [0, 1],
  repeatNodeCount: 4,
  tokenData:
    "'y~RbXY!ZYZ!Z]^!Zpq!Zrs!lwx$Yxy%qyz%v|}%{}!O&Q!Q![&o![!]'e!_!`'j!c!}'S#R#S'S#T#o'S#o#p'o#q#r't~!`S!T~XY!ZYZ!Z]^!Zpq!Z~!oVOr!lrs#Us#O!l#O#P#Z#P;'S!l;'S;=`$S<%lO!l~#ZOZ~~#^RO;'S!l;'S;=`#g;=`O!l~#jWOr!lrs#Us#O!l#O#P#Z#P;'S!l;'S;=`$S;=`<%l!l<%lO!l~$VP;=`<%l!l~$]VOw$Ywx#Ux#O$Y#O#P$r#P;'S$Y;'S;=`%k<%lO$Y~$uRO;'S$Y;'S;=`%O;=`O$Y~%RWOw$Ywx#Ux#O$Y#O#P$r#P;'S$Y;'S;=`%k;=`<%l$Y<%lO$Y~%nP;=`<%l$Y~%vOa~~%{Oc~~&QO!X~~&TP}!O&W~&]SP~OY&WZ;'S&W;'S;=`&i<%lO&W~&lP;=`<%l&W~&vS[~V~!Q![&o!c!}'S#R#S'S#T#o'S~'XSV~!Q!['S!c!}'S#R#S'S#T#o'S~'jO!Y~~'oO!W~~'tO!U~~'yO!V~",
  tokenizers: [0],
  topRules: { Program: [0, 2] },
  specialized: [{ term: 7, get: (value) => spec_Identifier[value] || -1 }],
  tokenPrec: 283,
});
